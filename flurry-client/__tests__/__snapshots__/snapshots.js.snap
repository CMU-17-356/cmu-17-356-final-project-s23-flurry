// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`analytics screen rendering 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "alignItems": "center",
      "backgroundColor": "white",
      "justifyContent": "center",
    }
  }
  data={
    [
      {
        "data": [
          <DateTimeRangePicker
            onDateRangeChange={[Function]}
          />,
        ],
        "title": "",
      },
      {
        "data": [
          <DriverDropdown
            drivers={[]}
            onSelectDriver={[Function]}
            slips={[]}
          />,
        ],
        "title": "",
      },
      {
        "data": [
          <SlipSeverityChart
            data={[]}
          />,
        ],
        "title": "",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={
    [
      0,
      3,
      6,
    ]
  }
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View>
        <Text
          style={
            {
              "fontSize": 18,
              "fontWeight": "bold",
              "marginBottom": 10,
              "marginVertical": 10,
            }
          }
        />
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "marginVertical": 10,
          }
        }
      >
        <View>
          <View
            style={
              {
                "alignItems": "center",
                "borderBottomColor": "#ccc",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingHorizontal": 10,
                "paddingVertical": 15,
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "#007aff",
                    "fontSize": 16,
                  }
                }
              >
                Start Date: 
                Sat Jan 01 2000
              </Text>
            </View>
            <Modal
              animationType="none"
              hardwareAccelerated={false}
              isVisible={false}
              onHide={[Function]}
              transparent={true}
              visible={false}
            />
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "borderBottomColor": "#ccc",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingHorizontal": 10,
                "paddingVertical": 15,
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "#007aff",
                    "fontSize": 16,
                  }
                }
              >
                Start Time: 
                12:00 AM
              </Text>
            </View>
            <Modal
              animationType="none"
              hardwareAccelerated={false}
              isVisible={false}
              onHide={[Function]}
              transparent={true}
              visible={false}
            />
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "borderBottomColor": "#ccc",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingHorizontal": 10,
                "paddingVertical": 15,
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "#007aff",
                    "fontSize": 16,
                  }
                }
              >
                End Date: 
                Wed May 03 2023
              </Text>
            </View>
            <Modal
              animationType="none"
              hardwareAccelerated={false}
              isVisible={false}
              onHide={[Function]}
              transparent={true}
              visible={false}
            />
          </View>
          <View
            style={
              {
                "alignItems": "center",
                "borderBottomColor": "#ccc",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingHorizontal": 10,
                "paddingVertical": 15,
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "#007aff",
                    "fontSize": 16,
                  }
                }
              >
                End Time: 
                11:29 PM
              </Text>
            </View>
            <Modal
              animationType="none"
              hardwareAccelerated={false}
              isVisible={false}
              onHide={[Function]}
              transparent={true}
              visible={false}
            />
          </View>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View>
        <Text
          style={
            {
              "fontSize": 18,
              "fontWeight": "bold",
              "marginBottom": 10,
              "marginVertical": 10,
            }
          }
        />
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "marginVertical": 10,
          }
        }
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View>
        <Text
          style={
            {
              "fontSize": 18,
              "fontWeight": "bold",
              "marginBottom": 10,
              "marginVertical": 10,
            }
          }
        />
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "marginVertical": 10,
          }
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "borderColor": "#000",
              "borderWidth": 1,
              "justifyContent": "center",
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <Text
            style={
              {
                "fontSize": 20,
                "fontWeight": "bold",
                "marginBottom": 10,
              }
            }
          >
            Slip Severity Distribution
          </Text>
          <View
            style={
              {
                "alignItems": "center",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                {
                  "height": 220,
                  "padding": 0,
                  "width": 400,
                }
              }
            >
              <RNSVGSvgView
                bbHeight="220"
                bbWidth="400"
                focusable={false}
                height={220}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    {
                      "flex": 0,
                      "height": 220,
                      "width": 400,
                    },
                  ]
                }
                width={400}
              >
                <RNSVGGroup
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                >
                  <RNSVGGroup
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                  >
                    <RNSVGDefs>
                      <RNSVGLinearGradient
                        gradient={
                          [
                            0,
                            -1,
                            1,
                            -1,
                          ]
                        }
                        gradientTransform={null}
                        gradientUnits={1}
                        name="backgroundGradient"
                        x1="0"
                        x2="220"
                        y1="220"
                        y2="0"
                      />
                      <RNSVGLinearGradient
                        gradient={
                          [
                            0,
                            436207616,
                            1,
                            436207616,
                          ]
                        }
                        gradientTransform={null}
                        gradientUnits={1}
                        name="fillShadowGradientFrom"
                        x1="0"
                        x2="0"
                        y1="0"
                        y2="220"
                      />
                    </RNSVGDefs>
                  </RNSVGGroup>
                  <RNSVGRect
                    fill={
                      {
                        "payload": 0,
                        "type": 0,
                      }
                    }
                    height="220"
                    propList={
                      [
                        "fill",
                      ]
                    }
                    rx="0"
                    ry="0"
                    width="100%"
                    x="0"
                    y="0"
                  />
                  <RNSVGGroup
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    matrix={
                      [
                        1,
                        0,
                        -0,
                        1,
                        115,
                        110,
                      ]
                    }
                  >
                    <RNSVGGroup
                      fill={
                        {
                          "payload": 4278190080,
                          "type": 0,
                        }
                      }
                    >
                      <RNSVGPath
                        d="M 10 -88 A 88 88 0 0 1 10 -88 L 10 0 A 0 0 0 0 0 10 0 Z "
                        fill={
                          {
                            "payload": 4281257073,
                            "type": 0,
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                      />
                      <RNSVGRect
                        fill={
                          {
                            "payload": 4281257073,
                            "type": 0,
                          }
                        }
                        height="16px"
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rx="8"
                        ry="8"
                        width="16px"
                        x="136"
                        y="-76"
                      />
                      <RNSVGText
                        content={null}
                        dx={[]}
                        dy={[]}
                        fill={
                          {
                            "payload": 4281257073,
                            "type": 0,
                          }
                        }
                        font={{}}
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rotate={[]}
                        x={
                          [
                            "160",
                          ]
                        }
                        y={
                          [
                            "-64",
                          ]
                        }
                      >
                        <RNSVGTSpan
                          content="0 Severity <= 30"
                          dx={[]}
                          dy={[]}
                          fill={
                            {
                              "payload": 4278190080,
                              "type": 0,
                            }
                          }
                          font={{}}
                          rotate={[]}
                          x={[]}
                          y={[]}
                        />
                      </RNSVGText>
                    </RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        {
                          "payload": 4278190080,
                          "type": 0,
                        }
                      }
                    >
                      <RNSVGPath
                        d="M 10 -88 A 88 88 0 0 1 10 -88 L 10 0 A 0 0 0 0 0 10 0 Z "
                        fill={
                          {
                            "payload": 4281637083,
                            "type": 0,
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                      />
                      <RNSVGRect
                        fill={
                          {
                            "payload": 4281637083,
                            "type": 0,
                          }
                        }
                        height="16px"
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rx="8"
                        ry="8"
                        width="16px"
                        x="136"
                        y="-32"
                      />
                      <RNSVGText
                        content={null}
                        dx={[]}
                        dy={[]}
                        fill={
                          {
                            "payload": 4281637083,
                            "type": 0,
                          }
                        }
                        font={{}}
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rotate={[]}
                        x={
                          [
                            "160",
                          ]
                        }
                        y={
                          [
                            "-20",
                          ]
                        }
                      >
                        <RNSVGTSpan
                          content="0 Severity <= 50"
                          dx={[]}
                          dy={[]}
                          fill={
                            {
                              "payload": 4278190080,
                              "type": 0,
                            }
                          }
                          font={{}}
                          rotate={[]}
                          x={[]}
                          y={[]}
                        />
                      </RNSVGText>
                    </RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        {
                          "payload": 4278190080,
                          "type": 0,
                        }
                      }
                    >
                      <RNSVGPath
                        d="M 10 -88 A 88 88 0 0 1 10 -88 L 10 0 A 0 0 0 0 0 10 0 Z "
                        fill={
                          {
                            "payload": 4294034447,
                            "type": 0,
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                      />
                      <RNSVGRect
                        fill={
                          {
                            "payload": 4294034447,
                            "type": 0,
                          }
                        }
                        height="16px"
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rx="8"
                        ry="8"
                        width="16px"
                        x="136"
                        y="12"
                      />
                      <RNSVGText
                        content={null}
                        dx={[]}
                        dy={[]}
                        fill={
                          {
                            "payload": 4294034447,
                            "type": 0,
                          }
                        }
                        font={{}}
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rotate={[]}
                        x={
                          [
                            "160",
                          ]
                        }
                        y={
                          [
                            "24",
                          ]
                        }
                      >
                        <RNSVGTSpan
                          content="0 Severity <= 70"
                          dx={[]}
                          dy={[]}
                          fill={
                            {
                              "payload": 4278190080,
                              "type": 0,
                            }
                          }
                          font={{}}
                          rotate={[]}
                          x={[]}
                          y={[]}
                        />
                      </RNSVGText>
                    </RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        {
                          "payload": 4278190080,
                          "type": 0,
                        }
                      }
                    >
                      <RNSVGPath
                        d="M 10 -88 A 88 88 0 0 1 10 -88 L 10 0 A 0 0 0 0 0 10 0 Z "
                        fill={
                          {
                            "payload": 4293348412,
                            "type": 0,
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                      />
                      <RNSVGRect
                        fill={
                          {
                            "payload": 4293348412,
                            "type": 0,
                          }
                        }
                        height="16px"
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rx="8"
                        ry="8"
                        width="16px"
                        x="136"
                        y="56"
                      />
                      <RNSVGText
                        content={null}
                        dx={[]}
                        dy={[]}
                        fill={
                          {
                            "payload": 4293348412,
                            "type": 0,
                          }
                        }
                        font={{}}
                        propList={
                          [
                            "fill",
                          ]
                        }
                        rotate={[]}
                        x={
                          [
                            "160",
                          ]
                        }
                        y={
                          [
                            "68",
                          ]
                        }
                      >
                        <RNSVGTSpan
                          content="0 Severity <= 100"
                          dx={[]}
                          dy={[]}
                          fill={
                            {
                              "payload": 4278190080,
                              "type": 0,
                            }
                          }
                          font={{}}
                          rotate={[]}
                          x={[]}
                          y={[]}
                        />
                      </RNSVGText>
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
  </View>
</RCTScrollView>
`;

exports[`login screen rendering 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "backgroundColor": "white",
      "flex": 1,
      "height": "100%",
      "justifyContent": "center",
      "paddingTop": "5%",
      "width": "100%",
    }
  }
>
  <ViewManagerAdapter_ExpoImage
    height={100}
    margin={10}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    proxiedProperties={
      {
        "accessibilityLabel": undefined,
        "contentFit": "cover",
        "contentPosition": {
          "left": "50%",
          "top": "50%",
        },
        "placeholder": [],
        "source": [],
        "tintColor": undefined,
        "transition": {
          "duration": 1000,
        },
      }
    }
    style={
      {
        "height": 100,
        "margin": 10,
        "width": 100,
      }
    }
    width={100}
  />
  <TextInput
    onChangeText={[Function]}
    placeholder="Username"
    style={
      {
        "borderColor": "black",
        "borderWidth": 1,
        "height": 44,
        "marginBottom": 10,
        "padding": 10,
        "width": 200,
      }
    }
    value=""
  />
  <TextInput
    onChangeText={[Function]}
    placeholder="Password"
    secureTextEntry={true}
    style={
      {
        "borderColor": "black",
        "borderWidth": 1,
        "height": 44,
        "marginBottom": 10,
        "padding": 10,
        "width": 200,
      }
    }
    value=""
  />
  <View
    style={
      {
        "alignContent": "center",
        "display": "flex",
        "flexDirection": "row",
        "paddingBottom": 5,
      }
    }
  >
    <View
      accessibilityRole="checkbox"
      accessibilityState={
        {
          "busy": undefined,
          "checked": false,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "borderColor": "#657786",
            "borderRadius": 2,
            "borderWidth": 2,
            "height": 20,
            "width": 20,
          },
          {
            "margin": 8,
          },
          false,
          false,
          undefined,
          false,
        ]
      }
    />
    <Text
      style={
        {
          "lineHeight": 37,
        }
      }
    >
      Manager
    </Text>
  </View>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Login
      </Text>
    </View>
  </View>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
            {
              "color": "#888888",
            },
          ]
        }
      >
        Don't have an account? Sign up
      </Text>
    </View>
  </View>
</View>
`;

exports[`map screen rendering 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "backgroundColor": "white",
      "flex": 1,
      "height": "100%",
      "paddingTop": "5%",
      "width": "100%",
    }
  }
>
  <View
    style={
      {
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "column",
          "width": "40%",
        }
      }
    >
      <Text>
        Start Date
      </Text>
      <View
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            [
              {},
            ]
          }
        >
          <Text
            style={
              [
                {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            12/31/2020
          </Text>
        </View>
      </View>
      <View
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            [
              {},
            ]
          }
        >
          <Text
            style={
              [
                {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            12:00 PM
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "column",
          "width": "40%",
        }
      }
    >
      <Text>
        End Date
      </Text>
      <View
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            [
              {},
            ]
          }
        >
          <Text
            style={
              [
                {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            5/3/2023
          </Text>
        </View>
      </View>
      <View
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            [
              {},
            ]
          }
        >
          <Text
            style={
              [
                {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            11:29 PM
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
